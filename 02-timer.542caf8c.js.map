{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAIMC,EAAO,CACXC,MAAOC,SAASC,cAAc,oBAC9BC,YAAaF,SAASC,cAAc,gBACpCE,SAAUH,SAASC,cAAc,eACjCG,UAAWJ,SAASC,cAAc,gBAClCI,YAAaL,SAASC,cAAc,kBACpCK,YAAaN,SAASC,cAAc,mBAGlCM,EAAc,KAElBT,EAAKI,YAAYM,UAAW,EAE5B,IAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACFA,EAAc,IAAM,IAAIH,KAC1BI,EAAAC,GAASC,OAAOC,QAAQ,uCAExBtB,EAAKI,YAAYM,UAAW,EAC5BV,EAAKI,YAAYmB,iBAAiB,SAAS,WACzCd,EAAce,aAAY,WACxBxB,EAAKI,YAAYM,UAAW,EAC5B,IAIMe,EAJgB,IAAIV,KACxBf,EAAKC,MAAMyB,MAAMC,QAAO,KAAO,MAC/BC,WACU,IAAIb,MAAOa,UAEmBC,EA8BpD,SAAmBC,GACjB,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENE,EAAOC,KAAKC,MAAMP,EAAKI,GACvBI,EAAQF,KAAKC,MAAMP,EAAMI,EAAOD,GAChCM,EAAUH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,GAC3CQ,EAAUJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,GAC5D,MAAO,CAAEI,OAAMG,QAAOC,UAASC,U,CAxCmBC,CAAUhB,GAA5CU,EAAkCN,EAAlCM,KAAMG,EAA4BT,EAA5BS,MAAOC,EAAqBV,EAArBU,QAASC,EAAYX,EAAZW,QAG9BxC,EAAKK,SAASqC,UAAYP,EAAO,GAAKQ,EAAeR,GAAQA,EAC7DnC,EAAKM,UAAUoC,UAAYJ,EAAQ,GAAKK,EAAeL,GAASA,EAChEtC,EAAKO,YAAYmC,UACfH,EAAU,GAAKI,EAAeJ,GAAWA,EAC3CvC,EAAKQ,YAAYkC,UACfF,EAAU,GAAKG,EAAeH,GAAWA,EACvCf,EAAY,KACdmB,cAAcnC,E,GAEf,I,OAMX,SAASkC,EAAejB,GACtB,OAAOmB,OAAOnB,GAAOoB,SAAS,EAAG,I,EAUnC,EAAAhD,EAAAiD,SAAU,mBAAoBpC,E","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  buttonStart: document.querySelector('[data-start]'),\n  dataDays: document.querySelector('[data-days]'),\n  dataHours: document.querySelector('[data-hours]'),\n  dataMinutes: document.querySelector('[data-minutes]'),\n  dataSeconds: document.querySelector('[data-seconds]'),\n};\n\nlet timerActive = null;\n\nrefs.buttonStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      Notiflix.Notify.failure('Please choose a date in the future');\n    } else {\n      refs.buttonStart.disabled = false;\n      refs.buttonStart.addEventListener('click', () => {\n        timerActive = setInterval(() => {\n          refs.buttonStart.disabled = true;\n          const dateChoosenMs = new Date(\n            refs.input.value.replace(/-/g, '/')\n          ).getTime();\n          const now = new Date().getTime();\n          const deltaTime = dateChoosenMs - now;\n          const { days, hours, minutes, seconds } = convertMs(deltaTime);\n\n          // timer({ days, hours, minutes, seconds });\n          refs.dataDays.innerHTML = days < 10 ? addLeadingZero(days) : days;\n          refs.dataHours.innerHTML = hours < 10 ? addLeadingZero(hours) : hours;\n          refs.dataMinutes.innerHTML =\n            minutes < 10 ? addLeadingZero(minutes) : minutes;\n          refs.dataSeconds.innerHTML =\n            seconds < 10 ? addLeadingZero(seconds) : seconds;\n          if (deltaTime < 1000) {\n            clearInterval(timerActive);\n          }\n        }, 1000);\n      });\n    }\n  },\n};\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// function timer({ days, hours, minutes, seconds }) {\n//   refs.dataDays.textContent = `${days}`;\n//   refs.dataHours.textContent = `${hours}`;\n//   refs.dataMinutes.textContent = `${minutes}`;\n//   refs.dataSeconds.textContent = `${seconds}`;\n// }\n\nflatpickr('#datetime-picker', options);\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n"],"names":["$dbdyf","parcelRequire","$84b9dae4df53835d$var$refs","input","document","querySelector","buttonStart","dataDays","dataHours","dataMinutes","dataSeconds","$84b9dae4df53835d$var$timerActive","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$6JpON","Notify","failure","addEventListener","setInterval","deltaTime","value","replace","getTime","ref","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$84b9dae4df53835d$var$convertMs","innerHTML","$84b9dae4df53835d$var$addLeadingZero","clearInterval","String","padStart","default"],"version":3,"file":"02-timer.542caf8c.js.map"}
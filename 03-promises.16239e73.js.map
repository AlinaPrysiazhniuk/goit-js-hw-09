{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,cAC/BE,WAAYH,SAASC,cAAc,aACnCG,UAAWJ,SAASC,cAAc,YAClCI,YAAaL,SAASC,cAAc,eAGtCH,EAAKC,KAAKO,iBAAiB,UAG8C,SAAjDC,G,kBAoBQ,IAATC,EAAUC,GAAVD,EAZLE,EAYeD,EAZZE,EAcZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,S,GAEpBA,E,KArBkBS,MAAb,SAAAC,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MACjBW,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAiCC,OAARb,EAAE,QAAYa,OAANd,EAAM,M,IAEhEe,OAAM,SAAAL,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MAClBW,EAAAxB,GAASyB,OAAOI,QAAQ,sBAAgCF,OAARb,EAAE,QAAYa,OAANd,EAAM,M,IAElEE,GAASe,C,EAdXnB,EAAMoB,iBAMN,IAJA,IAAIhB,EAAQb,EAAKK,WAAWyB,cACtBF,EAAO5B,EAAKM,UAAUwB,cACtBC,EAAS/B,EAAKO,YAAYuB,cAEvBE,EAAI,EAAGA,GAAKD,EAAQC,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('.js-submit'),\n  inputDelay: document.querySelector('.js-delay'),\n  inputStep: document.querySelector('.js-step'),\n  inputAmount: document.querySelector('.js-amount'),\n};\n\nrefs.form.addEventListener('submit', createPromises);\n\n///----------ФУНКЦІЯ, ЩО ВИКЛИКАЄТЬСЯ ПРИ ВІДПРАВЦІ ФОРМИ ТА ПОВЕРТАЄ РЕЗУЛЬТАТ СТВОРЕННЯ ПРОМІСА--------///\nfunction createPromises(event) {\n  event.preventDefault();\n\n  let delay = refs.inputDelay.valueAsNumber;\n  const step = refs.inputStep.valueAsNumber;\n  const amount = refs.inputAmount.valueAsNumber;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay) //виклик функції по сто\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += step; //затримка\n  }\n}\n\n///----------ФУНКЦІЯ, ЩО СТВОРЮЄ ТА ПОВЕРТАЄ ПРОМІС--------///\nfunction createPromise(position, delay) {\n  //position - кількість промісів, що буде створена\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","button","inputDelay","inputStep","inputAmount","addEventListener","event","position","delay","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","step","preventDefault","valueAsNumber","amount","i1","_loop"],"version":3,"file":"03-promises.16239e73.js.map"}
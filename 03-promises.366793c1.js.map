{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,cAC/BE,WAAYH,SAASC,cAAc,aACnCG,UAAWJ,SAASC,cAAc,YAClCI,YAAaL,SAASC,cAAc,eA0BN,SAAvBK,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCbV,EAAKC,KAAKgB,iBAAiB,UAG8C,SAAjDC,GACtBA,EAAMC,iBAEN,IAAIC,EAAQpB,EAAKK,WAAWgB,cAC5B,MAAMC,EAAOtB,EAAKM,UAAUe,cACtBE,EAASvB,EAAKO,YAAYc,cAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BhB,EAAcgB,EAAGJ,GACIK,MAAb,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBJ,QAAUd,MAAU,IAElEmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBN,QAAUd,MAAU,IAEpEU,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('.js-submit'),\n  inputDelay: document.querySelector('.js-delay'),\n  inputStep: document.querySelector('.js-step'),\n  inputAmount: document.querySelector('.js-amount'),\n};\n\nrefs.form.addEventListener('submit', createPromises);\n\n///----------ФУНКЦІЯ, ЩО ВИКЛИКАЄТЬСЯ ПРИ ВІДПРАВЦІ ФОРМИ ТА ПОВЕРТАЄ РЕЗУЛЬТАТ СТВОРЕННЯ ПРОМІСА--------///\nfunction createPromises(event) {\n  event.preventDefault();\n\n  let delay = refs.inputDelay.valueAsNumber;\n  const step = refs.inputStep.valueAsNumber;\n  const amount = refs.inputAmount.valueAsNumber;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay) //виклик функції по сто\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += step; //затримка\n  }\n}\n\n///----------ФУНКЦІЯ, ЩО СТВОРЮЄ ТА ПОВЕРТАЄ ПРОМІС--------///\nfunction createPromise(position, delay) {\n  //position - кількість промісів, що буде створена\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","button","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","valueAsNumber","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.366793c1.js.map"}